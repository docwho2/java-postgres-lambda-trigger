AWSTemplateFormatVersion: '2010-09-09'

Description: >
    Postgres Cluster Creator
    
    Creates Smallest Postgres Auora Cluster with 1 serverless node
    Allow Public access and let RDS call any Lambda Function

Parameters:
  DBNAMEPARAM:
    Description: The DB Name
    Type: String
  DBUSERPARAM:
    Description: The DB User Name
    Type: String
    
    
Resources:  
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: vpc.yaml
      TimeoutInMinutes: '60'
  
  
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: !Sub ${AWS::StackName} DB Subnet group
      SubnetIds: 
        - !GetAtt VPCStack.Outputs.PublicSubnet1
        - !GetAtt VPCStack.Outputs.PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} DB Subnet group
          
  RDSSecurityGroup:
     Type: AWS::EC2::SecurityGroup
     Properties:
       GroupDescription: !Sub ${AWS::StackName} DB Security Group
       VpcId: !GetAtt VPCStack.Outputs.VPC
       SecurityGroupIngress:  # Allow all Postgres Traffic in from anywhere
         - IpProtocol: tcp
           FromPort: 5432
           ToPort: 5432
           CidrIp: 0.0.0.0/0 
  
  RDSLambdaRole:
        Type: AWS::IAM::Role
        Properties:
            Description:  Allow RDS to call Lambda Functions
            AssumeRolePolicyDocument:
                Version: 2012-10-17 
                Statement:
                    - Effect: Allow
                      Principal:
                        Service:
                          - rds.amazonaws.com
                      Action:
                        - sts:AssumeRole
            ManagedPolicyArns:
              - arn:aws:iam::aws:policy/service-role/AWSLambdaRole   
              
              
  ServerlessV2Cluster:
    Type: 'AWS::RDS::DBCluster'
    DeletionPolicy: Delete
    Properties:
      Engine: aurora-postgresql
      Port: 5432
      EngineVersion: '15.6'
      DatabaseName: !Ref DBNAMEPARAM
      ManageMasterUserPassword: true
      MasterUsername: !Ref DBUSERPARAM
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref RDSSecurityGroup
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 1.0
      AssociatedRoles:
        - FeatureName: Lambda
          RoleArn: !GetAtt RDSLambdaRole.Arn
        
  ServerlessInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-postgresql
      DBClusterIdentifier: !Ref ServerlessV2Cluster
      DBInstanceClass: db.serverless
      PubliclyAccessible: true

Outputs:
  SecretArn:
    Description: The Managed Secret ARN
    Value: !GetAtt ServerlessV2Cluster.MasterUserSecret.SecretArn
  Endpoint:
    Description: The Endpoint for the DB Cluster
    Value: !GetAtt ServerlessV2Cluster.Endpoint.Address
