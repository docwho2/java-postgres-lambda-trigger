AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Postgres Java Lambda Trigger Demo

Parameters:
  DBNAMEPARAM:
    Description: The DB Name
    Type: String
    Default: demo
  DBUSERPARAM:
    Description: The DB User Name
    Type: String
    Default: master

Globals:
  Function:
    Environment: 
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        DB_MASTER_SECRET_ARN: !GetAtt RDSStack.Outputs.SecretArn
        DB_ENDPOINT: !GetAtt RDSStack.Outputs.Endpoint
        DB_NAME: !Ref DBNAMEPARAM
    CodeUri: .
    Architectures:
        - arm64
    Runtime: java11
    Timeout: 60
    MemorySize: 1024

Resources:
  
      
  RDSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: postgres.yaml
      TimeoutInMinutes: '60'
      Parameters:
        DBNAMEPARAM: !Ref DBNAMEPARAM
        DBUSERPARAM: !Ref DBUSERPARAM
        
  ApiGateway:
        Type: AWS::Serverless::HttpApi
        Properties:
            CorsConfiguration: true
            
  FrontEnd:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-DemoFrontEnd
      Description: Displays Sample Postgres Table and allows Address Entry
      Handler: demo.FrontEnd
      Policies: 
        - !Ref SecretsPolicy
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /
            Method: get
            ApiId: !Ref ApiGateway
            
  CreateAddress:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-CreateAddressFrontEnd
      Description: Creates an address row in table and redirects back to /
      Handler: demo.CreateAddressFrontEnd
      Policies: 
        - !Ref SecretsPolicy
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /create
            Method: get
            ApiId: !Ref ApiGateway
            
  DeleteAddress:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-DeleteAddressFrontEnd
      Description: Deletes an address row in table and redirects back to /
      Handler: demo.DeleteAddressFrontEnd
      Policies: 
        - !Ref SecretsPolicy
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /delete
            Method: get
            ApiId: !Ref ApiGateway
            
  DeleteAuditLog:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-DeleteAuditLogFrontEnd
      Description: Clears the audit_log table and redirects back to /
      Handler: demo.DeleteAuditLogFrontEnd
      Policies: 
        - !Ref SecretsPolicy
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            Path: /audit
            Method: get
            ApiId: !Ref ApiGateway
    
  PostgresAddressTrigger:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostgresAddressTrigger
      Description: Address trigger that will geo encode addresses on INSERT/UPDATE
      Handler: demo.PostgresAddressTrigger
      Environment:
        Variables:
            PLACE_INDEX: !Ref PlaceIndex
      ReservedConcurrentExecutions: 2
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 3600
        MaximumRetryAttempts: 2
      Policies: 
        - !Ref SecretsPolicy
        - !Ref GeoCodingPolicy 
        
  PlaceIndex:
        Type: AWS::Location::PlaceIndex
        Properties: 
            DataSource: Esri
            DataSourceConfiguration: 
                IntendedUse: SingleUse
            Description: Place Index for GEO queries
            IndexName: PostresDemoIndex
            
  PostgresAuditLogTrigger:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostgresAuditLogTrigger
      Description: Lambda that will fire when changes are made to tables for audit logging
      Handler: demo.PostgresAuditLogTrigger
      ReservedConcurrentExecutions: 2
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 3600
        MaximumRetryAttempts: 2
      Policies: 
        - !Ref SecretsPolicy          
            
   
  DBInitialization:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-DBInitialization
      Description: Performs the DB Scripting after DB creation
      Handler: demo.CloudFormationCustomResource
      Timeout: 120
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 600
        MaximumRetryAttempts: 1
      Policies: 
        - !Ref SecretsPolicy
            
  
  DBCustom:
    Type: Custom::DBInitialization
    DependsOn: RDSStack  # Make sure the RDS instance is done before we run DB Scripts
    Properties:
        ServiceToken: !GetAtt DBInitialization.Arn

  SecretsPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        Description: Allow Lambdas to access the RDS Managed Secret
        PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                  - 'secretsmanager:DescribeSecret'
                Resource: !GetAtt RDSStack.Outputs.SecretArn
   
  GeoCodingPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        Description: Allow Lambdas to call geo API for coding addresses
        PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - geo:SearchPlaceIndexForText
                Resource: !GetAtt PlaceIndex.Arn

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL, Open Browser to this to see demo"
    Value: !GetAtt ApiGateway.ApiEndpoint
  DBName:
    Description: "DB Name"
    Value: !Ref DBNAMEPARAM
  DBUsername:
    Description: "DB Username"
    Value: !Ref DBUSERPARAM
  DBEndpoint:
    Description: "DB Endpoint"
    Value: !GetAtt RDSStack.Outputs.Endpoint
  DBURL:
    Description: "JDBC Connection URL"
    Value: !Sub 'jdbc:postgresql://${RDSStack.Outputs.Endpoint}/${DBNAMEPARAM}'
     
